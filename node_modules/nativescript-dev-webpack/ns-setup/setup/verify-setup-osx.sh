# Verify there is are node modules at user home
if [ -f ~/.npmrc ]; then 
    echo ".npmrc found! Please remvoe it!"
    cat ~/.npmrc
    exit 1
fi

# Verify there is are node modules at user home
if [ -d ~/node_modules ]; then 
    ls -la ~/
    ls -la ~/node_modules
    echo "node_modules at ~ found! Please remvoe it!"
    exit 1
fi

# Verify there is are node modules in workspace
if [ -d ~/workspace/node_modules ]; then 
    ls -la ~/workspace
    ls -la ~/workspace/node_modules
    echo "node_modules at ~/workspace found! Please remvoe it!"
    exit 1
fi

# Verify network shares
set -e
echo 'PATH='$PATH
rm -rf tns-template-hello-world.tgz
set +e
cp /tns-dist/template-hello-world/Stable/tns-template-hello-world.tgz .
if [ $? -eq 0 ]; then
     echo "Network sahres are ok"
else
     if [ -f ~/jenkins/mount.sh ]; then 
		echo "~/jenkins/mount.sh found!"
		echo "Failed to copy from network share. Remount..."
		set -e
		~/jenkins/mount.sh
		set +e
		cp /tns-dist/template-hello-world/Stable/tns-template-hello-world.tgz .
		if [ $? -eq 0 ]; then
			echo "Network sahres are ok"
		else
			set -e
			echo "Failed to copy from network share. No chance :("
			exit 1
		fi
	else
		echo "~/jenkins/mount.sh NOT found!"	
		exit 1
	fi
fi

# Verify required software is available
set -e
java -version
node -v
npm -v
grunt -h
mvn -v
cmake --version
ios-deploy -V
appium -v

# Verify ANDROID_HOME is not empty
verify_android_home() {
	android=$(echo $ANDROID_HOME)
	if [[ $android != "" ]]; then
		echo "ANDROID_HOME=$android"
	else
		echo "ANDROID_HOME is empty!"
		exit 1
	fi
}

verify_android_home

# Verify INTEL HAXM
if $ANDROID_HOME/extras/intel/Hardware_Accelerated_Execution_Manager/silent_install.sh -v | grep -q '6.'; 
then
  echo "Intel HAXM found!"
else
  echo "Intel HAXM NOT found!"
  exit 1
fi

echo "Free mem:"
top -l 1 | grep PhysMem: | awk '{print $6}'
